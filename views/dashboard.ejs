<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Admin Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      display: flex;
      min-height: 100vh;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f8f9fa;
    }
    .sidebar {
      min-width: 240px;
      max-width: 240px;
      background-color: #343a40;
      color: white;
      padding: 20px;
      cursor: pointer;
    }
    .sidebar h3 {
      color: #fff;
      margin-bottom: 20px;
      font-weight: bold;
    }
    .sidebar a {
      display: block;
      color: white;
      padding: 12px 20px;
      margin-bottom: 10px;
      text-decoration: none;
      border-radius: 5px;
      transition: 0.2s;
    }
    .sidebar a:hover, .sidebar a.active {
      background-color: #495057;
      text-decoration: none;
      cursor: pointer;
    }
    .content {
      flex-grow: 1;
      padding: 30px;
    }
    .section { display: none; }
    .section.active { display: block; }

    /* Cards */
    .card img {
      height: 180px;
      object-fit: cover;
    }

    /* Fixed height for card */
.product-card {
  height: 420px; /* adjust as needed */
  width: 400px; 
  display: flex;
  flex-direction: column;
}

/* Ensure image doesn't shrink */
.product-card img {
  height: 180px;  /* fixed image height */
  object-fit: cover;
}

/* Card body fills remaining space */
.product-card .card-body {
  flex: 1;
  display: flex;
  flex-direction: column;
}

/* Description fixed height + hidden scrollbar */
.product-description {
  flex: 1;
  max-height: 80px; /* adjust as needed */
  overflow-y: auto;
  margin-bottom: 10px;
  scrollbar-width: none;       /* Firefox */
  -ms-overflow-style: none;    /* IE/Edge */
}
.product-description::-webkit-scrollbar {
  display: none;  /* Chrome, Safari */
}
/* Make buttons equal width inside flex container */
.product-card .d-flex .btn {
  border-radius: 8px;
  font-weight: 500;
}


    /* Popup styling */
    .popup {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: #fff;
      border-radius: 10px;
      max-width: 500px;
      width: 95%;
      z-index: 1000;
      box-shadow: 0 4px 20px rgba(0,0,0,0.3);
    }
    /* Header */
.popup-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 18px;
}
.popup-header h5 {
  font-weight: 700;
  color: #212529;
  margin: 0;
  text-align: center;
}
.popup-header .btn-close {
  background: none;
  border: none;
}

/* Labels */
.popup-content .form-label {
  font-weight: 500;
  color: #495057;
  margin-bottom: 6px;
}

/* Inputs */
.popup-content .form-control {
  border-radius: 10px;
  border: 1px solid #dee2e6;
  padding: 10px 14px;
  transition: border 0.2s, box-shadow 0.2s;
}
.popup-content .form-control:focus {
  border-color: #0d6efd;
  box-shadow: 0 0 0 0.2rem rgba(13,110,253,0.15);
}
.popup-content textarea {
  resize: none;
}
.popup-content input[type="file"] {
  padding: 8px;
  background: #f8f9fa;
}.popup-content .btn-success {
  width: 100%;
  border-radius: 12px;
  font-weight: 600;
  padding: 10px;
  font-size: 1rem;
  transition: 0.2s;
}
.popup-content .btn-success:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 14px rgba(25,135,84,0.25);
}

/* Progress bar */
#editProgressContainer {
  border-radius: 12px;
  overflow: hidden;
  background: #e9ecef;
}
#editProgress {
  font-weight: 600;
  font-size: 0.9rem;
}

/* Images grid */
#existingImages {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}
#existingImages img {
  width: 80px;
  height: 80px;
  object-fit: cover;
  border-radius: 6px;
  cursor: pointer;
  border: 2px solid transparent;
  transition: 0.2s;
}
#existingImages img:hover {
  border-color: #0d6efd;
  transform: scale(1.05);
}
    /* .popup-header { display: flex; justify-content: space-between; align-items: center; }
    #existingImages img { width: 80px; height: 80px; object-fit: cover; border-radius: 4px; cursor: pointer; margin-bottom: 5px; border: 2px solid transparent; transition: 0.2s; }
    #existingImages img:hover { border: 2px solid #0d6efd; } */
    /* Upload Section */
#uploadProductsSection {
  background: #ffffff;
  padding: 25px;
  border-radius: 16px;
  box-shadow: 0 6px 20px rgba(0,0,0,0.08);
  max-width: 650px;
  margin: auto;
  transition: 0.3s;
}
#uploadProductsSection h2 {
  font-weight: 700;
  color: #212529;
  margin-bottom: 20px;
  text-align: center;
}
#uploadProductsSection .form-label {
  font-weight: 500;
  color: #495057;
  margin-bottom: 6px;
}
#uploadProductsSection .form-control {
  border-radius: 10px;
  border: 1px solid #dee2e6;
  padding: 10px 14px;
  transition: border 0.2s, box-shadow 0.2s;
}
#uploadProductsSection .form-control:focus {
  border-color: #0d6efd;
  box-shadow: 0 0 0 0.2rem rgba(13,110,253,0.15);
}
#uploadProductsSection textarea {
  resize: none;
}
#uploadProductsSection input[type="file"] {
  padding: 8px;
  background: #f8f9fa;
}
#uploadProductsSection .btn-success {
  width: 100%;
  border-radius: 12px;
  font-weight: 600;
  padding: 10px;
  font-size: 1rem;
  transition: 0.2s;
}
#uploadProductsSection .btn-success:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 14px rgba(25,135,84,0.25);
}

/* Progress bar */
#uploadProgressContainer {
  border-radius: 12px;
  overflow: hidden;
  background: #e9ecef;
}
#uploadProgress {
  font-weight: 600;
  font-size: 0.9rem;
}
.card-text::-webkit-scrollbar {
  display: none; /* Chrome/Safari */
}
/* Reuse same popup styles */
#logoutPopup .popup-content {
  max-width: 360px;
  text-align: center;
}
#logoutPopup p {
  font-size: 0.9rem;
  color: #495057;
}


  </style>
</head>
<body>

  <!-- Sidebar -->
  <div class="sidebar">
    <h3>Admin Panel</h3>
    <hr style="border-color: #495057;">
    <a id="viewProductsLink" class="active">View Products</a>
    <a id="uploadProductsLink">Upload Products</a>
    <a href="/auth/logout">Logout</a>
  </div>

  <!-- Main Content -->
  <div class="content">
    <h1 class="text-center"> Admin Dashboard Welcome, Amit Sharma</h1>
    <hr>
    <span class="mb-5 d-block"></span>

    <!-- Store products safely in hidden div -->
    <div id="productData" data-products='<%- JSON.stringify(images) %>' style="display:none;"></div>

    <!-- View Products Section -->
    <div id="viewProductsSection" class="section active">
      <h2 class="mb-4 ">All Products</h2>
      <div class="row g-3">
        <% if (images && images.length > 0) { %>
          <% images.forEach(product => { %>
            <div class="col-md-4">
             <div class="card shadow-sm product-card">
  <img src="<%= product.urls[0] %>" class="card-img-top" alt="<%= product.title %>">

  <div class="card-body">
    <h5 class="card-title"><%= product.title %></h5>
    <p class="card-text product-description"><%= product.description %></p>

    <div class="form-check form-switch mb-2">
      <input class="form-check-input toggle-home" type="checkbox" data-id="<%= product._id %>" <%= product.showOnHome ? "checked" : "" %>>
      <label class="form-check-label">Show on Home</label>
    </div>

   <div class="d-flex gap-2 mt-auto">
  <button class="btn btn-primary btn-sm flex-fill" onclick="openEditPopup('<%= product._id %>')">Edit</button>
  <form action="/delete/<%= product._id %>?_method=DELETE" method="POST" class="flex-fill">
    <button type="submit" class="btn btn-danger btn-sm w-100">Delete</button>
  </form>
</div>

  </div>
</div>

            </div>
          <% }) %>
        <% } else { %>
          <p>No products found. Upload some!</p>
        <% } %>
      </div>
    </div>

    <!-- Upload Products Section -->
    <div id="uploadProductsSection" class="section">
      <h2 class="mb-3">Upload New Product</h2>
      <form id="uploadForm" action="/upload" method="POST" enctype="multipart/form-data">
        <div class="mb-3">
          <label class="form-label">Title</label>
          <input type="text" class="form-control" name="title" required>
        </div>
        <div class="mb-3">
          <label class="form-label">Description</label>
          <textarea class="form-control" name="description" rows="3" required></textarea>
        </div>
        <div class="mb-3">
          <label class="form-label">Download URL</label>
          <input type="text" class="form-control" name="downloadUrl" required>
        </div>
        <div class="mb-3">
          <label class="form-label">Upload Images</label>
          <input type="file" class="form-control" name="images" multiple required>
        </div>

        <!-- Progress bar -->
        <div class="progress mb-3" style="height:20px; display:none;" id="uploadProgressContainer">
          <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width:0%" id="uploadProgress">0%</div>
        </div>

        <button type="submit" class="btn btn-success">Upload</button>
      </form>
    </div>

    <!-- Edit Product Popup -->
      <div id="editProductPopup" class="popup" style="display:none;">
        <div class="popup-content p-3">
          <div class="popup-header mb-3">
            <h5>Edit Product</h5>
            <button type="button" class="btn-close" onclick="closeEditPopup()">âœ–</button>
          </div>

          <form id="editProductForm" method="POST" enctype="multipart/form-data">
            <div class="mb-2">
              <label class="form-label">Title</label>
              <input type="text" class="form-control form-control-sm" id="editTitle" name="title" required>
            </div>

            <div class="mb-2">
              <label class="form-label">Description</label>
              <textarea class="form-control form-control-sm" id="editDescription" name="description" rows="5" required></textarea>
            </div>

            <div class="mb-2">
              <label class="form-label">Download URL</label>
              <input type="text" class="form-control form-control-sm" id="editDownloadUrl" name="downloadUrl" required>
            </div>

            <div id="existingImages" class="mb-2">
              <p style="font-size:0.9rem; margin-bottom:5px;">Main image & delete options:</p>
            </div>

            <div class="mb-2">
              <label class="form-label">Add new images</label>
              <input type="file" class="form-control form-control-sm" id="editImages" name="images" multiple>
            </div>

            <div class="progress mb-2" style="height:20px; display:none;" id="editProgressContainer">
              <div class="progress-bar progress-bar-striped progress-bar-animated bg-info" role="progressbar" style="width:0%" id="editProgress">0%</div>
            </div>

            <button type="submit" class="btn btn-success btn-sm w-100">Update Product</button>
          </form>
        </div>
      </div>

  </div> 

  <script>
    // Sidebar toggle
    const viewLink = document.getElementById("viewProductsLink");
    const uploadLink = document.getElementById("uploadProductsLink");
    const viewSection = document.getElementById("viewProductsSection");
    const uploadSection = document.getElementById("uploadProductsSection");

    function showSection(section) {
      viewSection.classList.remove("active");
      uploadSection.classList.remove("active");
      viewLink.classList.remove("active");
      uploadLink.classList.remove("active");
      if(section==="view") { viewSection.classList.add("active"); viewLink.classList.add("active"); }
      if(section==="upload") { uploadSection.classList.add("active"); uploadLink.classList.add("active"); }
    }
    viewLink.addEventListener("click", ()=>showSection("view"));
    uploadLink.addEventListener("click", ()=>showSection("upload"));
    showSection("view");

    const productsContainer = document.getElementById("productData");
    const products = JSON.parse(productsContainer.dataset.products);

    function openEditPopup(productId) {
      const popup = document.getElementById("editProductPopup");
      const form = document.getElementById("editProductForm");
      const titleInput = document.getElementById("editTitle");
      const descInput = document.getElementById("editDescription");
      const existingDiv = document.getElementById("existingImages");
      const downURL = document.getElementById("editDownloadUrl");

      document.getElementById("editProgressContainer").style.display="none";
      document.getElementById("editProgress").style.width="0%";
      document.getElementById("editProgress").innerText="0%";

      form.action = `/edit/${productId}?_method=PUT`;
      const product = products.find(p => p._id===productId);
      if(!product) return alert("Product not found!");

      titleInput.value = product.title;
      descInput.value = product.description;
      downURL.value = product.downloadUrl;
      existingDiv.innerHTML = "";

      product.urls.forEach((url, idx)=>{
        const wrapper = document.createElement("div");
        wrapper.style.display="inline-block"; wrapper.style.margin="5px"; wrapper.style.textAlign="center";
        const img = document.createElement("img"); img.src=url;
        wrapper.appendChild(img); wrapper.appendChild(document.createElement("br"));

        const mainRadio = document.createElement("input");
        mainRadio.type="radio"; mainRadio.name="mainImageIndex"; mainRadio.value=idx;
        if(idx===0) mainRadio.checked=true;
        wrapper.appendChild(mainRadio); wrapper.appendChild(document.createTextNode(" Set as Main")); wrapper.appendChild(document.createElement("br"));

        const delCheckbox = document.createElement("input");
        delCheckbox.type="checkbox"; delCheckbox.name="deleteImages"; delCheckbox.value=idx;
        wrapper.appendChild(delCheckbox); wrapper.appendChild(document.createTextNode(" Delete"));

        existingDiv.appendChild(wrapper);
      });

      popup.style.display="block";
    }

    function closeEditPopup() { document.getElementById("editProductPopup").style.display="none"; }

    // Upload Progress
    const uploadForm = document.getElementById("uploadForm");
    const progressContainer = document.getElementById("uploadProgressContainer");
    const progressBar = document.getElementById("uploadProgress");

    uploadForm.addEventListener("submit", function(e){
      e.preventDefault();
      const formData = new FormData(uploadForm);
      const xhr = new XMLHttpRequest();
      xhr.open("POST","/upload",true);
      progressContainer.style.display="block";

      xhr.upload.onprogress = function(event){
        if(event.lengthComputable){
          const percent = Math.round((event.loaded/event.total)*100);
          progressBar.style.width = percent+"%";
          progressBar.innerText = percent+"%";
        }
      };

      xhr.onload=function(){
        if(xhr.status===200){
          progressBar.classList.add("bg-success"); progressBar.innerText="Upload Complete!";
          setTimeout(()=>location.reload(),1000);
        } else { progressBar.classList.add("bg-danger"); progressBar.innerText="Upload Failed!"; }
      };
      xhr.send(formData);
    });

    // Edit Progress
    const editForm = document.getElementById("editProductForm");
    const editProgressContainer = document.getElementById("editProgressContainer");
    const editProgressBar = document.getElementById("editProgress");

    editForm.addEventListener("submit", function(e){
      e.preventDefault();
      const formData = new FormData(editForm);
      const xhr = new XMLHttpRequest();
      xhr.open("POST", editForm.action, true);
      editProgressContainer.style.display="block";

      xhr.upload.onprogress = function(event){
        if(event.lengthComputable){
          const percent = Math.round((event.loaded/event.total)*100);
          editProgressBar.style.width = percent+"%";
          editProgressBar.innerText = percent+"%";
        }
      };

      xhr.onload=function(){
        if(xhr.status===200){
          editProgressBar.classList.add("bg-success"); editProgressBar.innerText="Update Complete!";
          setTimeout(()=>location.reload(),1000);
        } else { editProgressBar.classList.add("bg-danger"); editProgressBar.innerText="Update Failed!"; }
      };
      xhr.send(formData);
    });

    // Toggle Show on Home
document.querySelectorAll(".toggle-home").forEach(cb => {
  cb.addEventListener("change", function() {
    const id = this.dataset.id;
    const show = this.checked;

    fetch(`/toggle-home/${id}`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ showOnHome: show })
    })
    .then(res => res.json())
    .then(data => {
      if (!data.success) {
        alert("Update failed");
        this.checked = !show; // revert UI if failed
      }
    })
    .catch(err => {
      console.error(err);
      this.checked = !show;
    });
  });
});
function openLogoutPopup() {
  document.getElementById("logoutPopup").style.display = "flex";
}
function closeLogoutPopup() {
  document.getElementById("logoutPopup").style.display = "none";
}
function confirmLogout() {
  window.location.href = "/admin/logout"; // change to your actual logout route
}



  </script>
</body>
</html>