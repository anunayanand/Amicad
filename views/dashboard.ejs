<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Admin Dashboard</title>
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
    rel="stylesheet"
  />
  <style>
    body {
      display: flex;
      min-height: 100vh;
      font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f8f9fa;
    }
    .sidebar {
      min-width: 240px;
      max-width: 240px;
      background-color: #343a40;
      color: white;
      padding: 20px;
      cursor: pointer;
    }
    .sidebar h3 {
      color: #fff;
      margin-bottom: 20px;
      font-weight: bold;
    }
    .sidebar a {
      display: block;
      color: white;
      padding: 12px 20px;
      margin-bottom: 10px;
      text-decoration: none;
      border-radius: 5px;
      transition: 0.2s;
    }
    .sidebar a:hover,
    .sidebar a.active {
      background-color: #495057;
      text-decoration: none;
    }
    .content {
      flex-grow: 1;
      padding: 30px;
    }
    .section { display: none; }
    .section.active { display: block; }

    /* Product card */
    .product-card { height: 420px; width: 400px; display: flex; flex-direction: column; }
    .product-card img { height: 180px; object-fit: cover; }
    .product-card .card-body { flex: 1; display: flex; flex-direction: column; }
    .product-description { flex: 1; max-height: 80px; overflow-y: auto; margin-bottom: 10px; scrollbar-width: none; -ms-overflow-style: none; }
    .product-description::-webkit-scrollbar { display: none; }
    .product-card .d-flex .btn { border-radius: 8px; font-weight: 500; }

    /* Progress bar */
    #uploadProgressContainer, #editProgressContainer { border-radius: 12px; overflow: hidden; background: #e9ecef; }
    #uploadProgress, #editProgress { font-weight: 600; font-size: 0.9rem; }

    /* Existing images in modal */
    #existingImages img { width: 80px; height: 80px; object-fit: cover; border-radius: 6px; cursor: pointer; border: 2px solid transparent; transition: 0.2s; }
    #existingImages img:hover { border-color: #0d6efd; transform: scale(1.05); }
  </style>
</head>
<body>

  <!-- Sidebar -->
  <div class="sidebar">
    <h3>Admin Panel</h3>
    <hr style="border-color: #495057" />
    <a id="viewProductsLink" class="active">View Products</a>
    <a id="uploadProductsLink">Upload Products</a>
    <a href="/auth/logout">Logout</a>
  </div>

  <!-- Main Content -->
  <div class="content">
    <h1 class="text-center">Admin Dashboard</h1>
    <hr />

    <!-- Store products safely in hidden div -->
    <div id="productData" data-products="<%- JSON.stringify(product) %>" style="display: none"></div>

    <!-- View Products Section -->
    <div id="viewProductsSection" class="section active">
      <h2 class="mb-4">All Products</h2>
      <div class="row g-3">
        <% if (product && product.length > 0) { %>
          <% product.forEach(product => { %>
            <div class="col-md-4">
              <div class="card shadow-sm product-card">
                <img src="<%= product.urls[0] %>" class="card-img-top" alt="<%= product.title %>" />
                <div class="card-body">
                  <h5 class="card-title"><%= product.title %></h5>
                  <p class="card-text product-description"><%= product.description %></p>

                  <div class="form-check form-switch mb-2">
                    <form action="/toggle-home/<%= product._id %>" method="POST">
  <input
    type="hidden"
    name="showOnHome"
    value="0"
  >
  <input
    class="form-check-input"
    type="checkbox"
    name="showOnHome"
    value="1"
    onchange="this.form.submit()"
    <%= product.showOnHome ? "checked" : "" %>
  >
</form>

                    <label class="form-check-label">Show on Home</label>
                  </div>

                  <div class="d-flex gap-2 mt-auto">
                    <a href="/edit/<%= product._id %>" class="btn btn-primary btn-sm w-100">Edit</a>

                    <form action="/delete/<%= product._id %>" method="POST" class="flex-fill">
                      <button type="submit" class="btn btn-danger btn-sm w-100">Delete</button>
                    </form>
                  </div>
                </div>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <p>No products found. Upload some!</p>
        <% } %>
      </div>
    </div>

    <!-- Upload Products Section -->
    <div id="uploadProductsSection" class="section">
      <h2 class="mb-3">Upload New Product</h2>
      <form id="uploadForm" action="/upload" method="POST" enctype="multipart/form-data">
        <div class="mb-3">
          <label class="form-label">Title</label>
          <input type="text" class="form-control" name="title" required />
        </div>
        <div class="mb-3">
          <label class="form-label">Description</label>
          <textarea class="form-control" name="description" rows="3" required></textarea>
        </div>
        <div class="mb-3">
          <label class="form-label">Download URL</label>
          <input type="text" class="form-control" name="downloadUrl" required />
        </div>
        <div class="mb-3">
          <label class="form-label">Upload product</label>
          <input type="file" class="form-control" name="images" multiple required />
        </div>

        <!-- Progress bar -->
        <div class="progress mb-3" style="height: 20px; display: none" id="uploadProgressContainer">
          <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: 0%" id="uploadProgress">0%</div>
        </div>

        <button type="submit" class="btn btn-success">Upload</button>
      </form>
    </div>

  </div>

  <!-- Edit Product Modal -->
  <div class="modal fade" id="editProductModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Edit Product</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="editProductForm" method="POST" enctype="multipart/form-data">
            <input type="hidden" name="id" id="editProductId">

            <div class="mb-3">
              <label>Title:</label>
              <input type="text" class="form-control" name="title" id="editTitle" required>
            </div>

            <div class="mb-3">
              <label>Description:</label>
              <textarea class="form-control" name="description" id="editDescription" rows="4" required></textarea>
            </div>

            <div class="mb-3">
              <label>Download URL:</label>
              <input type="text" class="form-control" name="downloadUrl" id="editDownloadUrl" required>
            </div>

            <div id="existingImages" class="mb-3"></div>

            <div class="mb-3">
              <label>Add new images</label>
              <input type="file" class="form-control" name="images" multiple>
            </div>

            <!-- Edit progress -->
            <div class="progress mb-2" style="height: 20px; display: none" id="editProgressContainer">
              <div class="progress-bar progress-bar-striped progress-bar-animated bg-info" role="progressbar" style="width: 0%" id="editProgress">0%</div>
            </div>

          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" form="editProductForm" class="btn btn-primary">Save Changes</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Sidebar toggle
    const viewLink = document.getElementById("viewProductsLink");
    const uploadLink = document.getElementById("uploadProductsLink");
    const viewSection = document.getElementById("viewProductsSection");
    const uploadSection = document.getElementById("uploadProductsSection");

    function showSection(section) {
      viewSection.classList.remove("active");
      uploadSection.classList.remove("active");
      viewLink.classList.remove("active");
      uploadLink.classList.remove("active");
      if(section === "view"){ viewSection.classList.add("active"); viewLink.classList.add("active"); }
      if(section === "upload"){ uploadSection.classList.add("active"); uploadLink.classList.add("active"); }
    }
    viewLink.addEventListener("click", () => showSection("view"));
    uploadLink.addEventListener("click", () => showSection("upload"));

    // Products data
    const products = JSON.parse(document.getElementById("productData").dataset.products);

    // Toggle Show on Home
    document.querySelectorAll(".toggle-home").forEach(cb => {
      cb.addEventListener("change", function() {
        const id = this.dataset.id;
        const show = this.checked;
        fetch(`/toggle-home/${id}`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ showOnHome: show })
        }).then(res=>res.json()).then(data=>{
          if(!data.success) { alert("Update failed"); this.checked=!show; }
        }).catch(err=>{console.error(err); this.checked=!show;});
      });
    });

    // Upload Progress
    const uploadForm = document.getElementById("uploadForm");
    const progressContainer = document.getElementById("uploadProgressContainer");
    const progressBar = document.getElementById("uploadProgress");
    uploadForm.addEventListener("submit", function(e){
      e.preventDefault();
      const formData = new FormData(uploadForm);
      const xhr = new XMLHttpRequest();
      xhr.open("POST","/upload",true);
      progressContainer.style.display="block";
      xhr.upload.onprogress = function(event){
        if(event.lengthComputable){
          const percent = Math.round((event.loaded/event.total)*100);
          progressBar.style.width = percent + "%";
          progressBar.innerText = percent + "%";
        }
      }
      xhr.onload = function(){
        if(xhr.status===200){ progressBar.classList.add("bg-success"); progressBar.innerText="Upload Complete!"; setTimeout(()=>location.reload(),1000); }
        else { progressBar.classList.add("bg-danger"); progressBar.innerText="Upload Failed!"; }
      }
      xhr.send(formData);
    });

    // Edit Modal JS
    document.addEventListener("DOMContentLoaded", ()=>{
      const editForm = document.getElementById("editProductForm");
      const existingImagesDiv = document.getElementById("existingImages");
      const editModalEl = document.getElementById("editProductModal");
      const editModal = new bootstrap.Modal(editModalEl);

      window.openEditModal = function(id){
        const product = products.find(p=>p._id===id);
        if(!product) return;

        editForm.action = `/edit/${product._id}`;
        document.getElementById("editProductId").value = product._id;
        document.getElementById("editTitle").value = product.title;
        document.getElementById("editDescription").value = product.description;
        document.getElementById("editDownloadUrl").value = product.downloadUrl;

        // Clear images div and previous hidden inputs
        existingImagesDiv.innerHTML = "";
        editForm.querySelectorAll('input[name="deleteImages"], input[name="mainImageIndex"]').forEach(el=>el.remove());

        // Add images
        product.urls.forEach((url, idx)=>{
          const wrapper = document.createElement("div");
          wrapper.className="position-relative d-inline-block me-2 mb-2";

          const img = document.createElement("img");
          img.src = url; img.style.width="80px"; img.style.height="80px"; img.style.objectFit="cover"; img.classList.add("border","rounded");

          const delCheckbox = document.createElement("input");
          delCheckbox.type="checkbox";
          delCheckbox.style.position="absolute"; delCheckbox.style.top="2px"; delCheckbox.style.left="2px";
          delCheckbox.title="Delete this image";
          delCheckbox.addEventListener("change", function(){
            const existingInput = editForm.querySelector(`input[name="deleteImages"][value="${idx}"]`);
            if(existingInput) existingInput.remove();
            if(this.checked){
              const input = document.createElement("input");
              input.type="hidden"; input.name="deleteImages"; input.value=idx;
              editForm.appendChild(input);
            }
          });

          const starBtn = document.createElement("button");
          starBtn.type="button"; starBtn.className="btn btn-sm btn-warning position-absolute";
          starBtn.style.bottom="2px"; starBtn.style.right="2px"; starBtn.innerHTML="★"; starBtn.title="Set as main image";
          starBtn.addEventListener("click", function(){
            const existingInput = editForm.querySelector('input[name="mainImageIndex"]');
            if(existingInput) existingInput.remove();
            const input = document.createElement("input");
            input.type="hidden"; input.name="mainImageIndex"; input.value=idx;
            editForm.appendChild(input);
          });

          wrapper.appendChild(img); wrapper.appendChild(delCheckbox); wrapper.appendChild(starBtn);
          existingImagesDiv.appendChild(wrapper);
        });

        editModal.show();
      };

      // Edit progress submit
      editForm.addEventListener("submit", function(e){
        e.preventDefault();
        const formData = new FormData(editForm);
        const xhr = new XMLHttpRequest();
        xhr.open("POST", editForm.action, true);
        const editProgressContainer = document.getElementById("editProgressContainer");
        const editProgressBar = document.getElementById("editProgress");
        editProgressContainer.style.display="block";
        xhr.upload.onprogress = function(event){
          if(event.lengthComputable){
            const percent = Math.round((event.loaded/event.total)*100);
            editProgressBar.style.width=percent+"%"; editProgressBar.innerText=percent+"%";
          }
        }
        xhr.onload=function(){
          if(xhr.status===200){ editProgressBar.classList.add("bg-success"); editProgressBar.innerText="Update Complete!"; setTimeout(()=>location.reload(),1000);}
          else{ editProgressBar.classList.add("bg-danger"); editProgressBar.innerText="Update Failed!";}
        }
        xhr.send(formData);
      });

    });
  </script>

</body>
</html>
